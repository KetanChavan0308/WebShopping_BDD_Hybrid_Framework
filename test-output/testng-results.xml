<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="14" passed="13" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-09-06T22:46:37 IST" name="Suite" finished-at="2023-09-06T22:48:33 IST" duration-ms="115472">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@63475ace]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2023-09-06T22:46:37 IST" name="Test" finished-at="2023-09-06T22:48:33 IST" duration-ms="115472">
      <class name="runner.TestRunner">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:runner.TestRunner@63475ace]" started-at="2023-09-06T22:46:37 IST" name="setUpClass" finished-at="2023-09-06T22:46:38 IST" duration-ms="711" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5b74902c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@63475ace]" started-at="2023-09-06T22:46:38 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-06T22:46:54 IST" duration-ms="16455" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Add Product to Cart"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Add to Cart Functionality"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@63475ace]" started-at="2023-09-06T22:46:54 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-06T22:47:03 IST" duration-ms="8831" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Remove Product From Cart"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Add to Cart Functionality"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@63475ace]" started-at="2023-09-06T22:47:03 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-06T22:47:09 IST" duration-ms="6148" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login With Valid Credentials"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Login Functionality"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@63475ace]" started-at="2023-09-06T22:47:09 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-06T22:47:16 IST" duration-ms="6214" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login With Valid Credentials"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Login Functionality"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@63475ace]" started-at="2023-09-06T22:47:16 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-06T22:47:22 IST" duration-ms="6186" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login With Valid Credentials"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Login Functionality"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@63475ace]" started-at="2023-09-06T22:47:22 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-06T22:47:27 IST" duration-ms="5470" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login with invalid Credentials"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Login Functionality"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@63475ace]" started-at="2023-09-06T22:47:27 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-06T22:47:36 IST" duration-ms="8323" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[""]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Login Functionality"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@63475ace]" started-at="2023-09-06T22:47:36 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-06T22:47:42 IST" duration-ms="5943" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login with Valid Email and Invalid Password"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Login Functionality"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@63475ace]" started-at="2023-09-06T22:47:42 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-06T22:47:47 IST" duration-ms="5525" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login with empty fields"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Login Functionality"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@63475ace]" started-at="2023-09-06T22:47:47 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-06T22:47:53 IST" duration-ms="5452" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Forget password Link is available on login page or not"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Login Functionality"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@63475ace]" started-at="2023-09-06T22:47:53 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-06T22:48:00 IST" duration-ms="7342" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Register with Mandetory Field"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Register Functionality"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@63475ace]" started-at="2023-09-06T22:48:00 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-06T22:48:08 IST" duration-ms="7702" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Register With all Field"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Register Functionality"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@63475ace]" started-at="2023-09-06T22:48:08 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-06T22:48:24 IST" duration-ms="16701" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Register With Duplicate Email"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Register Functionality"]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//li[contains(text(),"The specified email already exists")]"}
  (Session info: chrome=116.0.5845.142)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.12.0', revision: '249f2a7d1b*'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.8'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [c7c8e56f26e8cf6148536bff983d0d37, findElement {using=xpath, value=//li[contains(text(),"The specified email already exists")]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 116.0.5845.142, chrome: {chromedriverVersion: 116.0.5845.96 (1a3918166880..., userDataDir: C:\Users\ketan\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:57337}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:57337/devtoo..., se:cdpVersion: 116.0.5845.142, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: c7c8e56f26e8cf6148536bff983d0d37]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//li[contains(text(),"The specified email already exists")]"}
  (Session info: chrome=116.0.5845.142)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.12.0', revision: '249f2a7d1b*'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.8'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [c7c8e56f26e8cf6148536bff983d0d37, findElement {using=xpath, value=//li[contains(text(),"The specified email already exists")]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 116.0.5845.142, chrome: {chromedriverVersion: 116.0.5845.96 (1a3918166880..., userDataDir: C:\Users\ketan\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:57337}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:57337/devtoo..., se:cdpVersion: 116.0.5845.142, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: c7c8e56f26e8cf6148536bff983d0d37
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:359)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:353)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy30.isDisplayed(Unknown Source)
at pages.RegisterPage.getUnsucessfullText(RegisterPage.java:107)
at stepdefinitions.RegisterStep.UsershouldgetWarrningmassageforduplicateEmail(RegisterStep.java:81)
at ✽.User should get Warrning massage for duplicate Email(file:///D:/Eclipse/Eclipse_Code/Framework/WebShopProject/src/test/resources/features/Register.feature:41)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@63475ace]" started-at="2023-09-06T22:48:24 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-06T22:48:29 IST" duration-ms="4873" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Register Without empty Field"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Register Functionality"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:runner.TestRunner@63475ace]" started-at="2023-09-06T22:48:29 IST" name="tearDownClass" finished-at="2023-09-06T22:48:33 IST" duration-ms="3489" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- runner.TestRunner -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
